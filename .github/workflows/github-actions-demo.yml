# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: project cicd flow

on:
  push:
    branches: [ main, Drumo ]
  pull_request:
    branches: [ main, Drumo ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: lifrut/atp-ns
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to server
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{ secrets.SERVER_IP }}
          user: ${{ secrets.SERVER_USERNAME }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          command: |
            echo '--- START WORK ON REMOTE SERVER ---';
            pg_dump -p 5431 -h localhost atp > "/tmp/$(date +'%Y-%m-%d_%H-%M-%S').dmp"
            echo '--- DUMP CREATED ---';
            cd ATP;
            git pull;
            echo '--- GIT PULL DONE ---';
            docker-compose --file docker-compose.yml down;
            docker-compose --file docker-compose.yml up -d;
            echo '--- DOCKER COMPOSE UP DONE ---';